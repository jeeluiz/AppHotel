// <auto-generated />
using System;
using Hotel.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hotel.Data.Migrations
{
    [DbContext(typeof(MeuDbContext))]
    partial class MeuDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.7");

            modelBuilder.Entity("Hotel.Data.Model.CadastroHospede", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NumeroEndereco")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CadastroHospede");
                });

            modelBuilder.Entity("Hotel.Data.Model.CategoriaQuarto", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("ValorDiariaAdulto")
                        .HasColumnType("REAL");

                    b.Property<double>("ValorDiariaCrianca")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("CategoriaQuartos");
                });

            modelBuilder.Entity("Hotel.Data.Model.Reserva", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCheckIn")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCheckOut")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("HoraCheckIn")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("HoraCheckOut")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("HospedeId")
                        .HasColumnType("TEXT");

                    b.Property<int>("QuantidadeAdultos")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QuantidadeCrianca")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QuantidadeDias")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QuartoId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("ValorTotal")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("HospedeId");

                    b.HasIndex("QuartoId");

                    b.ToTable("Hospedagems");
                });

            modelBuilder.Entity("Hotel.Data.Model.Reserva", b =>
                {
                    b.HasOne("Hotel.Data.Model.CadastroHospede", "Hospede")
                        .WithMany()
                        .HasForeignKey("HospedeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel.Data.Model.CategoriaQuarto", "Quarto")
                        .WithMany()
                        .HasForeignKey("QuartoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hospede");

                    b.Navigation("Quarto");
                });
#pragma warning restore 612, 618
        }
    }
}
